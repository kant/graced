    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <!-- WARNING: Eclipse auto-generated file.
          Any modifications will be overwritten.
          To include a user specific buildfile here, simply create one in the same
          directory with the processing instruction <?eclipse.ant.import?>
          as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="COSC 4F90">
<property environment="env"/>
<property name="junit.output.dir" value="junit"/>
<property name="debuglevel" value="source,lines,vars"/>
<property name="target" value="1.8"/>
<property name="source" value="1.8"/>

<path id="COSC 4F90.classpath">
    <pathelement location="bin"/>
    <pathelement location="lib/commons-math3-3.6.1.jar"/>
    <pathelement location="lib/junit.jar"/>
    <pathelement location="lib/org.hamcrest.core_1.3.0.v201303031735.jar"/>
</path>

<target name="init">
    <mkdir dir="bin"/>
    <copy includeemptydirs="false" todir="bin">
        <fileset dir="src">
            <exclude name="**/*.launch"/>
            <exclude name="**/*.java"/>
        </fileset>
    </copy>
</target>

<target name="clean">
    <delete dir="bin"/>
</target>

<target depends="clean" name="cleanall"/>
<target depends="build-project" name="build"/>

<target depends="init" name="build-project">
    <echo message="${ant.project.name}: ${ant.file}"/>
    <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
        <src path="src"/>
        <classpath refid="COSC 4F90.classpath"/>
    </javac>
</target>

<target name="test" depends="build"><!--depends="build"-->
  <junit printsummary="withOutAndErr" haltonfailure="yes">
      <classpath>
        <path refid="COSC 4F90.classpath" />
        <!--pathelement location="${test.build.dir}"/-->
      </classpath>
      <formatter type="brief" usefile="false" />
      <batchtest>
          <fileset dir="COSC 4F90.classpath" includes="**/*Test*.java" />
      </batchtest>
  </junit>
</target>
</project>
